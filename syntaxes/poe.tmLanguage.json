{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "PoE",
	"scopeName": "source.poe",
	"patterns": [
		{
			"name": "string.quoted.double.poe",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.poe",
					"match": "\\\\."
				}
			]
		},
		{
			"name": "string.unquoted.asm.poe",
			"begin": "\\{\\{",
			"end": "\\}\\}",
			"patterns": [
				{
					"name": "constant.character.escape.poe",
					"match": "\\\\."
				}
			]
		},
		{
			"name": "meta.function.poe",
			"match": "([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
			"captures": {
				"1": {
					"name": "entity.name.function.poe"
				}
			}
		},
		{
			"name": "keyword.control.flow.poe",
			"match": "\\b(if|else|then|while|for|return|to|solve|break)\\b"
		},
		{
			"name": "keyword.control.asm.poe",
			"match": "\\b(x86(-64)?)\\b"
		},
		{
			"name": "constant.language.poe",
			"match": "\\b(true|false)\\b"
		},
		{
			"name": "keyword.function.poe",
			"match": "\\b(act|fun|submit)\\b"
		},
		{
			"name": "keyword.type.poe",
			"match": "\\b(bv|u8|u16|u32|u64|i8|i16|i32|i64)\\b"
		},
		{
			"name": "string.quoted.hex.poe",
			"match": "\\b[0-9a-fA-F]+hs\\b"
		},
		{
			"name": "string.quoted.bit.poe",
			"match": "\\b[0-1]+bs\\b"
		},
		{
			"name": "constant.numeric.hex.poe",
			"match": "0x[0-9a-fA-F]+"
		},
		{
			"name": "constant.numeric.dec.poe",
			"match": "[0-9]+"
		},
		{
			"name": "variable.name.poe",
			"match": "[a-zA-Z_][a-zA-Z0-9]*"
		}
	]
}